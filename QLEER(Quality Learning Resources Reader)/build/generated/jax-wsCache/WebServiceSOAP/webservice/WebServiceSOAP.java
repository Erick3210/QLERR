
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.1
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WebServiceSOAP", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServiceSOAP {


    /**
     * 
     * @param wsdLurl
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "LWSProcess")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "LWSProcess", targetNamespace = "http://WebService/", className = "webservice.LWSProcess")
    @ResponseWrapper(localName = "LWSProcessResponse", targetNamespace = "http://WebService/", className = "webservice.LWSProcessResponse")
    @Action(input = "http://WebService/WebServiceSOAP/LWSProcessRequest", output = "http://WebService/WebServiceSOAP/LWSProcessResponse")
    public String lwsProcess(
        @WebParam(name = "WSDLurl", targetNamespace = "")
        String wsdLurl);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "TipoDeLetraDocX")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "TipoDeLetraDocX", targetNamespace = "http://WebService/", className = "webservice.TipoDeLetraDocX")
    @ResponseWrapper(localName = "TipoDeLetraDocXResponse", targetNamespace = "http://WebService/", className = "webservice.TipoDeLetraDocXResponse")
    @Action(input = "http://WebService/WebServiceSOAP/TipoDeLetraDocXRequest", output = "http://WebService/WebServiceSOAP/TipoDeLetraDocXResponse")
    public List<String> tipoDeLetraDocX(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "ColorDeFondoPDF")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ColorDeFondoPDF", targetNamespace = "http://WebService/", className = "webservice.ColorDeFondoPDF")
    @ResponseWrapper(localName = "ColorDeFondoPDFResponse", targetNamespace = "http://WebService/", className = "webservice.ColorDeFondoPDFResponse")
    @Action(input = "http://WebService/WebServiceSOAP/ColorDeFondoPDFRequest", output = "http://WebService/WebServiceSOAP/ColorDeFondoPDFResponse")
    public List<String> colorDeFondoPDF(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Aviabilidad")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Aviabilidad", targetNamespace = "http://WebService/", className = "webservice.Aviabilidad")
    @ResponseWrapper(localName = "AviabilidadResponse", targetNamespace = "http://WebService/", className = "webservice.AviabilidadResponse")
    @Action(input = "http://WebService/WebServiceSOAP/AviabilidadRequest", output = "http://WebService/WebServiceSOAP/AviabilidadResponse")
    public double aviabilidad(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Completitud")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Completitud", targetNamespace = "http://WebService/", className = "webservice.Completitud")
    @ResponseWrapper(localName = "CompletitudResponse", targetNamespace = "http://WebService/", className = "webservice.CompletitudResponse")
    @Action(input = "http://WebService/WebServiceSOAP/CompletitudRequest", output = "http://WebService/WebServiceSOAP/CompletitudResponse")
    public double completitud(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Defecto4")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Defecto4", targetNamespace = "http://WebService/", className = "webservice.Defecto4")
    @ResponseWrapper(localName = "Defecto4Response", targetNamespace = "http://WebService/", className = "webservice.Defecto4Response")
    @Action(input = "http://WebService/WebServiceSOAP/Defecto4Request", output = "http://WebService/WebServiceSOAP/Defecto4Response")
    public double defecto4(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "TipoDeLetraPDF")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "TipoDeLetraPDF", targetNamespace = "http://WebService/", className = "webservice.TipoDeLetraPDF")
    @ResponseWrapper(localName = "TipoDeLetraPDFResponse", targetNamespace = "http://WebService/", className = "webservice.TipoDeLetraPDFResponse")
    @Action(input = "http://WebService/WebServiceSOAP/TipoDeLetraPDFRequest", output = "http://WebService/WebServiceSOAP/TipoDeLetraPDFResponse")
    public List<String> tipoDeLetraPDF(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "AlineacionPDF")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AlineacionPDF", targetNamespace = "http://WebService/", className = "webservice.AlineacionPDF")
    @ResponseWrapper(localName = "AlineacionPDFResponse", targetNamespace = "http://WebService/", className = "webservice.AlineacionPDFResponse")
    @Action(input = "http://WebService/WebServiceSOAP/AlineacionPDFRequest", output = "http://WebService/WebServiceSOAP/AlineacionPDFResponse")
    public List<String> alineacionPDF(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Defecto1")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Defecto1", targetNamespace = "http://WebService/", className = "webservice.Defecto1")
    @ResponseWrapper(localName = "Defecto1Response", targetNamespace = "http://WebService/", className = "webservice.Defecto1Response")
    @Action(input = "http://WebService/WebServiceSOAP/Defecto1Request", output = "http://WebService/WebServiceSOAP/Defecto1Response")
    public double defecto1(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @param n2
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "usability", targetNamespace = "http://WebService/", className = "webservice.Usability")
    @ResponseWrapper(localName = "usabilityResponse", targetNamespace = "http://WebService/", className = "webservice.UsabilityResponse")
    @Action(input = "http://WebService/WebServiceSOAP/usabilityRequest", output = "http://WebService/WebServiceSOAP/usabilityResponse")
    public double usability(
        @WebParam(name = "n1", targetNamespace = "")
        String n1,
        @WebParam(name = "n2", targetNamespace = "")
        String n2);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "AlineacionDocX")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AlineacionDocX", targetNamespace = "http://WebService/", className = "webservice.AlineacionDocX")
    @ResponseWrapper(localName = "AlineacionDocXResponse", targetNamespace = "http://WebService/", className = "webservice.AlineacionDocXResponse")
    @Action(input = "http://WebService/WebServiceSOAP/AlineacionDocXRequest", output = "http://WebService/WebServiceSOAP/AlineacionDocXResponse")
    public List<String> alineacionDocX(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Defecto2")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Defecto2", targetNamespace = "http://WebService/", className = "webservice.Defecto2")
    @ResponseWrapper(localName = "Defecto2Response", targetNamespace = "http://WebService/", className = "webservice.Defecto2Response")
    @Action(input = "http://WebService/WebServiceSOAP/Defecto2Request", output = "http://WebService/WebServiceSOAP/Defecto2Response")
    public double defecto2(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "ColorDeFondoDocX")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ColorDeFondoDocX", targetNamespace = "http://WebService/", className = "webservice.ColorDeFondoDocX")
    @ResponseWrapper(localName = "ColorDeFondoDocXResponse", targetNamespace = "http://WebService/", className = "webservice.ColorDeFondoDocXResponse")
    @Action(input = "http://WebService/WebServiceSOAP/ColorDeFondoDocXRequest", output = "http://WebService/WebServiceSOAP/ColorDeFondoDocXResponse")
    public List<String> colorDeFondoDocX(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Defecto5")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Defecto5", targetNamespace = "http://WebService/", className = "webservice.Defecto5")
    @ResponseWrapper(localName = "Defecto5Response", targetNamespace = "http://WebService/", className = "webservice.Defecto5Response")
    @Action(input = "http://WebService/WebServiceSOAP/Defecto5Request", output = "http://WebService/WebServiceSOAP/Defecto5Response")
    public double defecto5(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @param n2
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "redeability", targetNamespace = "http://WebService/", className = "webservice.Redeability")
    @ResponseWrapper(localName = "redeabilityResponse", targetNamespace = "http://WebService/", className = "webservice.RedeabilityResponse")
    @Action(input = "http://WebService/WebServiceSOAP/redeabilityRequest", output = "http://WebService/WebServiceSOAP/redeabilityResponse")
    public double redeability(
        @WebParam(name = "n1", targetNamespace = "")
        String n1,
        @WebParam(name = "n2", targetNamespace = "")
        String n2);

    /**
     * 
     * @param n1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Defecto3")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Defecto3", targetNamespace = "http://WebService/", className = "webservice.Defecto3")
    @ResponseWrapper(localName = "Defecto3Response", targetNamespace = "http://WebService/", className = "webservice.Defecto3Response")
    @Action(input = "http://WebService/WebServiceSOAP/Defecto3Request", output = "http://WebService/WebServiceSOAP/Defecto3Response")
    public double defecto3(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @param n2
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Accesibility")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Accesibility", targetNamespace = "http://WebService/", className = "webservice.Accesibility")
    @ResponseWrapper(localName = "AccesibilityResponse", targetNamespace = "http://WebService/", className = "webservice.AccesibilityResponse")
    @Action(input = "http://WebService/WebServiceSOAP/AccesibilityRequest", output = "http://WebService/WebServiceSOAP/AccesibilityResponse")
    public double accesibility(
        @WebParam(name = "n1", targetNamespace = "")
        String n1,
        @WebParam(name = "n2", targetNamespace = "")
        String n2);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "Tama\u00f1oDeLaFuentePDF")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Tama\u00f1oDeLaFuentePDF", targetNamespace = "http://WebService/", className = "webservice.Tama\u00f1oDeLaFuentePDF")
    @ResponseWrapper(localName = "Tama\u00f1oDeLaFuentePDFResponse", targetNamespace = "http://WebService/", className = "webservice.Tama\u00f1oDeLaFuentePDFResponse")
    @Action(input = "http://WebService/WebServiceSOAP/Tama\u00f1oDeLaFuentePDFRequest", output = "http://WebService/WebServiceSOAP/Tama\u00f1oDeLaFuentePDFResponse")
    public List<String> tamañoDeLaFuentePDF(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "ColorDeLaFuentePDF")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ColorDeLaFuentePDF", targetNamespace = "http://WebService/", className = "webservice.ColorDeLaFuentePDF")
    @ResponseWrapper(localName = "ColorDeLaFuentePDFResponse", targetNamespace = "http://WebService/", className = "webservice.ColorDeLaFuentePDFResponse")
    @Action(input = "http://WebService/WebServiceSOAP/ColorDeLaFuentePDFRequest", output = "http://WebService/WebServiceSOAP/ColorDeLaFuentePDFResponse")
    public List<String> colorDeLaFuentePDF(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "ColorDeLaFuenteDocX")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ColorDeLaFuenteDocX", targetNamespace = "http://WebService/", className = "webservice.ColorDeLaFuenteDocX")
    @ResponseWrapper(localName = "ColorDeLaFuenteDocXResponse", targetNamespace = "http://WebService/", className = "webservice.ColorDeLaFuenteDocXResponse")
    @Action(input = "http://WebService/WebServiceSOAP/ColorDeLaFuenteDocXRequest", output = "http://WebService/WebServiceSOAP/ColorDeLaFuenteDocXResponse")
    public List<String> colorDeLaFuenteDocX(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

    /**
     * 
     * @param n1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "Tama\u00f1oDeLaFuenteDocX")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Tama\u00f1oDeLaFuenteDocX", targetNamespace = "http://WebService/", className = "webservice.Tama\u00f1oDeLaFuenteDocX")
    @ResponseWrapper(localName = "Tama\u00f1oDeLaFuenteDocXResponse", targetNamespace = "http://WebService/", className = "webservice.Tama\u00f1oDeLaFuenteDocXResponse")
    @Action(input = "http://WebService/WebServiceSOAP/Tama\u00f1oDeLaFuenteDocXRequest", output = "http://WebService/WebServiceSOAP/Tama\u00f1oDeLaFuenteDocXResponse")
    public List<String> tamañoDeLaFuenteDocX(
        @WebParam(name = "n1", targetNamespace = "")
        String n1);

}
